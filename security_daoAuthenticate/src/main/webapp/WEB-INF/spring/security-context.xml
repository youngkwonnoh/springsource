<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id="customLoginSuccessHandler" class="com.spring.handler.CustomLoginSuccessHandler" />
	<bean id="customAccessDeniedHandler" class="com.spring.handler.CustomAccessDeniedHandler" />
	
	<!-- 암호화 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<security:http>
		<!-- 접근 제한 시 컨트롤러로 바로 이동하는 형태
		<security:access-denied-handler error-page="/access-denied"/> -->
		
		<!-- 접근 제한 시 handler를 거쳐 컨트롤러로 이동하는 형태 -->
		<security:access-denied-handler ref="customAccessDeniedHandler"/>
		
		<!-- 로그인 담당 : 기본 필터 -->
		<security:form-login login-page="/login" authentication-failure-url="/login-error" authentication-success-handler-ref="customLoginSuccessHandler"/>
		
		<!-- 로그 아웃 담당 -->
		<security:logout invalidate-session="true" logout-success-url="/"/>
		
		<!-- remember-me 활성화 -->
		<security:remember-me data-source-ref="ds" token-validity-seconds="604800"/>
		
		<!-- 사용자의 요청을 가로채서 권한 여부 확인 -->
		<!-- <security:intercept-url pattern="/user-page" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/admin-page" access="hasRole('ROLE_ADMIN')"/>  -->
	</security:http>
	
	<!-- UserDetailService -->
	<bean id="customUserDetailService" class="com.spring.service.CustomUserDetailService"/>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailService">
			<!-- jdbc 인증 방식 -->
			<security:password-encoder ref="bCryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
